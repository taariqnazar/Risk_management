return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
liability <- function(delta=0) {
# Read in zero_rates
zero_rates <- read.csv("zero_rates.csv")
# Convert to vector
zero_rates <- zero_rates$x
discount_factors <- matrix(0,length(zero_rates))
for (i in 1:length(zero_rates)){discount_factors[i] <- exp(-(zero_rates[i]+delta)*i)}
liability <- 100 * sum(discount_factors)
return(liability)
}
bond_portfolio <- function(Y_2=0) {
# Read in zero_rates
zero_rates <- read.csv("zero_rates.csv"); zero_rates <- zero_rates$x;
# Read in bond_payments
bond_payments <- read.csv("bond_payments.csv"); bond_payments <- bond_payments$x
temp <- matrix(0,length(zero_rates))
for (i in 1:length(zero_rates)) {
temp[i] <- bond_payments[i]*exp(-(zero_rates[i]+Y_2)*i)
}
bond_portfolio <- sum(temp)
return(bond_portfolio)
}
sampling <- function() {
mu_1 <- 0.08; sigma_1 <- 0.2; sigma_2 <- 0.01; rho <- 0.1;
res <- matrix(0,4)
Z_1 <- rnorm(1); Z_2 <- rnorm(1);
Y_1 <- mu_1 + sigma_1 * Z_1
Y_2 <- sigma_2 * (rho * Z_2 + sqrt(1-rho^2)*Z_2)
res[1] <- Y_1; res[2] <- Y_2;
res[3] <- Z_1; res[4] <- Z_2;
return(res)
}
sampling()
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
liability <- function(delta=0) {
# Read in zero_rates
zero_rates <- read.csv("zero_rates.csv")
# Convert to vector
zero_rates <- zero_rates$x
discount_factors <- matrix(0,length(zero_rates))
for (i in 1:length(zero_rates)){discount_factors[i] <- exp(-(zero_rates[i]+delta)*i)}
liability <- 100 * sum(discount_factors)
return(liability)
}
bond_portfolio <- function(Y_2=0) {
# Read in zero_rates
zero_rates <- read.csv("zero_rates.csv"); zero_rates <- zero_rates$x;
# Read in bond_payments
bond_payments <- read.csv("bond_payments.csv"); bond_payments <- bond_payments$x
temp <- matrix(0,length(zero_rates))
for (i in 1:length(zero_rates)) {
temp[i] <- bond_payments[i]*exp(-(zero_rates[i]+Y_2)*i)
}
bond_portfolio <- sum(temp)
return(bond_portfolio)
}
sampling <- function() {
mu_1 <- 0.08; sigma_1 <- 0.2; sigma_2 <- 0.01; rho <- 0.1;
res <- matrix(0,4)
Z_1 <- rnorm(1); Z_2 <- rnorm(1);
Y_1 <- mu_1 + sigma_1 * Z_1
Y_2 <- sigma_2 * (rho * Z_2 + sqrt(1-rho^2)*Z_2)
res[1] <- Y_1; res[2] <- Y_2;
res[3] <- Z_1; res[4] <- Z_2;
return(res)
}
sampling()
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
```{r, echo=FALSE, out.height="150%", out.width="250%", fig.align = 'center'}
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
knitr::include_graphics()
V
library(ggplot2)
library(plotly)
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
simulation <- function(num_simu) {
# Store
res <- matrix(0, num_simu, 5) # Z_1, Z_2, Y_1, Y_2 & V_1
# Simulation
i = 1
while(i <= num_simu) {
sample <- sampling(); Y_1 <- sample[1]; Y_2 <- sample[2];
Z_1 <- sample[3]; Z_2 <- sample[4];
#print(sqrt(Z_1^2+Z_2^2))
if (sqrt(Z_1^2+Z_2^2) >= 2.99 & sqrt(Z_1^2+Z_2^2) <= 3.001)  {
tot_invest <- 1.3 * liability(Y_2)
bond_invest <- 0.7 * tot_invest * bond_portfolio(Y_2)
stock_invest <- 0.3 * tot_invest * exp(Y_2)
res[i,5] <- bond_invest + stock_invest
res[i,1] <- Z_1; res[i,2] <- Z_2;
res[i,3] <- Y_1; res[i,4] <- Y_2;
colnames(res) <- c("Z_1", "Z_2", "Y_1", "Y_2", "V_1")
i = i + 1
}
}
return(res)
}
# Testing
num_simu <- 10
res <- simulation(num_simu)
Z_1 <- res[,1]; Z_2 <- res[,2];
Y_1 <- res[,3]; Y_2 <- res[,4]; V_1 <- res[,5]
# Plot
library(ggplot2)
par(mfrow=c(1,3))
plot(Z_1, Z_2, cex = 0.3, col="black",
ylab = "Z_2", xlab= "Z_1",
main = "Standard Normal Distribution on the radius = 3")
abline(h = 0, v = 0)
plot(Y_1, Y_2, cex = 0.3, col="black",
ylab = "Y_2", xlab= "Y_1",
main = "Transformation of Z_1 & Z_2, Y_1 & Y_2")
abline(h = 0, v = 0)
plot(V_1, cex = 0.3, col="black",
ylab = "Value" , xlab= "sample",
main = "The net payoff")
